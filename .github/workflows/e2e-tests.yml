name: E2E Tests Workflow

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    paths-ignore:
      - 'docs/**'
      - '**.mdx?'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: read
  actions: read

jobs:
  all-in-one:
    name: 'All-in-one (node: 18)'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Monorepo install
        uses: ./.github/actions/yarn-nm-install

      - name: Monorepo build
        uses: ./.github/actions/run-build
      
      # Recursively find and copy .env.example to .env for each test package
      - name: Set up .env files for each e2e test package
        run: |
          find ./e2e-tests -type f -name ".env.example" | while read example_env; do
            env_dir=$(dirname "$example_env")
            cp "$example_env" "$env_dir/.env"
          done
        shell: bash

      # Set multiple environment variables from GitHub Secrets
      - name: Set environment variables
        run: |
          find ./e2e-tests -type f -name ".env" | while read env_file; do
            declare -A services=(
              ["BITCOIN_LOADER"]="BITCOIN_LOADER"
              ["BITCOIN_INDEXER"]="BITCOIN_INDEXER"
              ["BITCOIN_LISTENER"]="BITCOIN_LISTENER"
              ["BITCOIN_WALLET"]="BITCOIN_WALLET"
            )

            for service in "${!services[@]}"; do
              if [ -n "${{ secrets.NETWORK_PROVIDER_QUICK_NODE_URLS }}" ]; then
                echo "${service}_NETWORK_PROVIDER_QUICK_NODE_URLS=${{ secrets.NETWORK_PROVIDER_QUICK_NODE_URLS }}" >> "$env_file"
              fi
              if [ -n "${{ secrets.NETWORK_PROVIDER_SELF_NODE_URL }}" ]; then
                echo "${service}_NETWORK_PROVIDER_SELF_NODE_URL=${{ secrets.NETWORK_PROVIDER_SELF_NODE_URL }}" >> "$env_file"
              fi
            done
          done
        shell: bash

      # Run E2E tests
      - name: ðŸ“¥ Run E2E Tests
        run: yarn test:e2e
        shell: bash
